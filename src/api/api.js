const fetch = require('node-fetch');

const API_URL = 'https://games-test.datsteam.dev/api';
const TOKEN = '27fa2e88-8672-431c-af5f-ee0d9701566e';
const HEADERS = {
  'Content-Type': 'application/json',
  'X-Auth-Token': TOKEN
};

// =======================
// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
// =======================
async function registerPlayer() {
  try {
    const res = await fetch(`${API_URL}/register`, { method: 'POST', headers: HEADERS });
    if (!res.ok) {
      const err = await res.json();
      console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', err.message || res.statusText);
      return;
    }
    const data = await res.json();
    console.log('‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ò–º—è:', data.name, '| –†–∞—É–Ω–¥:', data.realm);
  } catch (error) {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error.message || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞');
    return null;
  }
}

// =======================
// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—Ä–µ–Ω—ã
// =======================
async function getArena() {
  try {
    const res = await fetch(`${API_URL}/arena`, { headers: HEADERS });
    if (!res.ok) {
      const err = await res.json();
      throw new Error(err.message || res.statusText);
    }
    return await res.json();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –û—à–∏–±–∫–∞ –∞—Ä–µ–Ω—ã:', error.message || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞');
    return null;
  }
}

// -------------------------
// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è
// -------------------------
async function sendMove(moves) {
  try {
    const res = await fetch(`${API_URL}/move`, {
      method: 'POST',
      headers: HEADERS,
      body: JSON.stringify({ moves }),
    });
    const data = await res.json();
    if (!res.ok) {
      throw new Error(data.message);
    }
    console.log('üì§ –•–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
    return data;
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ö–æ–¥–∞:', err.message);
    return null;
  }
}

module.exports = {
  registerPlayer,
  getArena,
  sendMove,
};